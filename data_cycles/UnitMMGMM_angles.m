% MM and gaussian unit test
% for 5 key positions
data_train=load('angles_data/Angles_normal.mat');
data_train=data_train.Angles_normal;
[N T]=size(data_train);
data_train=resample(data_train', T/10, T)';
%new size of the data, resampled
[N T]=size(data_train);
data_train=reshape(data_train, 5, 4*T/5);


%% normalization towards mean value
[N T]=size(data_train);
nS=T/50;
obj = fitgmdist(data_train',3, 'Regularize', 0.1);


M=1;
% example on how to  generate random data by this model 
 X = random(obj,3);


%% 
 % test new data to check if the model fits the new data and what is the
 % probability of the data being generated by this model

 
 % using the ML algo
% http://people.csail.mit.edu/dsontag/courses/ml12/slides/lecture21.pdf

% Posterior
%y = y + obj.PComponents(j) * mvncdf(X,obj.mu(j,:),obj.Sigma(:,:,j));
 
%pr = posterior(GMM_state{1}, state(:,1)');
% if there is a model which fits with more than 95 % accuracy, it is fine

%%

% test on the normal set
normal=load('angles_data/Angles_normal_test.mat');
normal=normal.Angles_normal_test;
[N T]=size(normal);
nS=T/50;
%number of sequences
figure(1)
hold on


for h=1:50:T
        normalized=normal(:, h:h+49);   
        [N T]=size(normalized);
        normalized=resample(normalized', T/5, T)';
        figure(1)
        plot(normalized')
        [pr, nlogl]= posterior(obj, normalized);
   
        nlogl_m(M)=nlogl;
        M=M+1;
 end


display('abnormal');
M

%% abnormal LKI
LKI=load('angles_data/Angles_LFD.mat');
LKI=LKI.Angles_LFD;
[N T]=size(LKI);
nS=T/50;
%number of sequences
for i=1:50:T
    data_seq=LKI(:,i:i+49);
    [N T]=size(data_seq);
        data_seq=resample(data_seq', T/10, T)';
        [pr, nlogl]= posterior(obj,data_seq);
        nlogl_m(M)=nlogl;
        M=M+1;
end



M

%%%% abnormal LKI
LKI=load('angles_data/Angles_LKI.mat');
LKI=LKI.Angles_LKI;
[N T]=size(LKI);
nS=T/50;
%number of sequences
for i=1:50:T
    data_seq=LKI(:,i:i+49);
    [N T]=size(data_seq);
        data_seq=resample(data_seq', T/10, T)';
        [pr, nlogl]= posterior(obj,data_seq);
        nlogl_m(M)=nlogl;
        M=M+1;
end

%%
M
%% abnormal LKI
LKI=load('angles_data/Angles_RFD.mat');
LKI=LKI.Angles_RFD;
[N T]=size(LKI);
nS=T/50;
%number of sequences
for i=1:50:T
    data_seq=LKI(:,i:i+49);
    [N T]=size(data_seq);
        data_seq=resample(data_seq', T/10, T)';
        [pr, nlogl]= posterior(obj,data_seq);
        nlogl_m(M)=nlogl;
        M=M+1;
end


// unction prob =GMMposterior(x,mu,covmat,weights)
// % inputs: x, Dx1 observation vector;
// %         mu, Dxn mean vector (n is the number of components)
// %         covmat, DxDxn covariance matrix; 
// %         weights, 1xn component weights. 

// % output: prob, a posterior probability

// d=size(x,1); % get the number of dimensions
// w=size(weights,2); % get the number of compoments/weights
// g=zeros(w,1);
// for i=1:w
//     g(i)=exp(-1/2*(x-mu(:,i))'/covmat(:,:,i)*(x-mu(:,i)))/((2*pi‌​)^(d/2)*sqrt(det(cov‌​mat(:,:,i))));
// end

// prob=weights*g;
// end